def SOUND_LCD():
    if NPNBitKit.analog_sound(AnalogPin.P2) > 30:
        serial.write_string("1:SOUND:" + ("" + str(NPNBitKit.analog_sound(AnalogPin.P2))) + "#")
        NPNLCD.show_string("EGG HATCHES", 0, 0)

def on_data_received():
    global cmd
    cmd = serial.read_until(serial.delimiters(Delimiters.HASH))
    if cmd == "0":
        pins.digital_write_pin(DigitalPin.P0, 0)
    elif cmd == "1":
        pins.digital_write_pin(DigitalPin.P0, 1)
serial.on_data_received(serial.delimiters(Delimiters.HASH), on_data_received)

def TEMP():
    global counter_lcd
    counter_lcd += 1
    if counter_lcd >= 50:
        counter_lcd = 0
        NPNBitKit.dht11_read(DigitalPin.P0)
        serial.write_string("1:TEMP:" + ("" + str(NPNBitKit.dht11_temp())) + "#")
cmd = ""
counter_lcd = 0
led.enable(False)
NPNLCD.lcd_init()
counter_lcd = 0

def on_forever():
    SOUND_LCD()
    TEMP()
    basic.pause(100)
basic.forever(on_forever)
